syntax = "proto3";
package bettermq;

service PriorityQueue {
	rpc Enqueue(EnqueueRequest) returns (EnqueueReply);
	rpc Dequeue(DequeueRequest) returns (DequeueReply);
	rpc Ack(AckRequest) returns (AckReply);
	rpc Nack(NackRequest) returns (NackReply);
	rpc GetActiveTopics(GetActiveTopicsRequest) returns (GetActiveTopicsReply);	
	rpc CreateTopic(CreateTopicRequest) returns (CreateTopicReply);
	rpc RemoveTopic(RemoveTopicRequest) returns (RemoveTopicReply);
}

message EnqueueRequest {
	string topic = 1;
	bytes payload = 2;
	int32 priority = 3;
	uint32 deliver_after = 4; //ms
	string meta = 5;
}

message EnqueueReply {
	string message_id = 1;	
	string node_id = 2;
}

message DequeueRequest {
	string topic = 1;
	int32 count = 2;
	int32 lease_duration = 3; //ms
}

message DataItem {
	string message_id = 1;
	string meta = 2;
	bytes payload = 3; 
	int32 priority = 4;
}

message DequeueReply {
	repeated DataItem items = 1;	
}

message AckRequest {
	string topic = 1;
	string message_id = 2;
}

message AckReply {

}

message NackRequest {
	string topic = 1;
	string message_id = 2;
	string meta = 3;
	uint32 deliver_after = 4;
}

message NackReply {

}

message GetActiveTopicsRequest {

}

message TopicStats {
	string topic = 1;
	uint64 ready_size = 2;
	uint64 delayed_size = 3;
}

message GetActiveTopicsReply {
	repeated TopicStats topics = 1;
}

message InnerIndex {
	int32 priority = 1;
	uint64 timestamp = 2;
	bytes message_id = 3;
}


message CreateTopicRequest {
	string topic = 1;
}

message CreateTopicReply {

}

message RemoveTopicRequest {
	string topic = 1;
}

message RemoveTopicReply {

}
